.. |_| unicode:: 0xA0


================================
Plugin 'viessmann' Konfiguration
================================


.. index:: Plugins; viessmann Konfiguration

.. image:: /plugins/viessmann/webif/static/img/plugin_logo.svg
   :alt: plugin logo
   :width: 300px
   :height: 300px
   :scale: 50 %
   :align: left

.. |br| raw:: html

   <br />

Im folgenden sind etwaige Anforderungen und unterstützte Hardware beschrieben. Danach folgt die               Beschreibung, wie das Plugin **viessmann** konfiguriert wird. Außerdem ist im folgenden               beschrieben, wie das Plugin in den Item Definitionen genutzt werden kann. [#f1]_ 

Es handelt sich bei diesem Plugin um ein **gateway Plugin**.

**ACHTUNG**: Dieses Plugin ist als develop gekennzeichnet. Es kann daher sein, dass es                  noch nicht Feature-Complete oder noch fehlerhaft ist.



Beschreibung
============

Lesen und Schreiben von Werten einer Viessmann Heizung


Anforderungen
=============




 - Minimum SmartHomeNG Version: **1.9.3.1**
 - Minimum Python Version: **3.6**

Konfiguration
=============


Im folgenden ist beschrieben, wie das Plugin **viessmann** konfiguriert wird. Außerdem ist im folgenden beschrieben, wie das Plugin in den Item Definitionen genutzt werden kann.


=========
Parameter
=========


Das Plugin verfügt über folgende Parameter, die in der Datei ``../etc/plugin.yaml`` konfiguriert werden:


clean_structs
=============




 - Datentyp: **bool**
 - Standardwert: **True**


command_class
=============




 - Datentyp: **str**
 - Standardwert: **SDPCommandViessmann**


model
=====




 - Datentyp: **foo**
 - Standardwert: **None**


serialport
==========




 - Datentyp: **str**


suspend_item
============


Item-Pfad für das Suspend-Item

 - Datentyp: **str**


viess_proto
===========




 - Datentyp: **str**
 - Standardwert: **P300**

 - Mögliche Werte:

   - **P300**
   - **KW**


==============
Item Attribute
==============


Das Plugin unterstützt folgende Item Attribute, die in den Dateien im Verzeichnis  ``../items`` verwendet werden:


viess_command
=============


Legt das angegebene Kommando für das Item fest

 - Datentyp: **str**


viess_custom1
=============


Der Inhalt dieses Items kann vom jeweiligen Gerät für spezielle Zwecke genutzt werden. Durch den Parameter "recursive_custom: 1" in der Geräte-Konfiguration wird der Wert rekursiv für alle Unteritems gesetzt.

 - Datentyp: **str**


viess_custom2
=============


Der Inhalt dieses Items kann vom jeweiligen Gerät für spezielle Zwecke genutzt werden. Durch den Parameter "recursive_custom: 2" in der Geräte-Konfiguration wird der Wert rekursiv für alle Unteritems gesetzt.

 - Datentyp: **str**


viess_custom3
=============


Der Inhalt dieses Items kann vom jeweiligen Gerät für spezielle Zwecke genutzt werden. Durch den Parameter "recursive_custom: 3" in der Geräte-Konfiguration wird der Wert rekursiv für alle Unteritems gesetzt.

 - Datentyp: **str**


viess_lookup
============


Der Inhalt der Lookup-Tabelle mit dem angegebenen Namen wird beim Start einmalig als dict oder list in das Item geschrieben.   Durch Anhängen von "#<mode>" an den Namen der Tabelle kann die Art der Tabelle ausgewählt werden: - fwd liefert die Tabelle Gerät -> SmartHomeNG (Standard) - rev liefert die Tabelle SmartHomeNG -> Gerät - rci liefert die Tabelle SmarthomeNG -> Gerät in Kleinbuchstaben - list liefert die Liste der Namen für SmartHomeNG

 - Datentyp: **str**


viess_read
==========


Liest/erhält Werte vom Gerät

 - Datentyp: **bool**


viess_read_cycle
================


Konfiguriert ein Intervall in Sekunden für regelmäßiges Lesen

 - Datentyp: **num**


viess_read_group
================


Weist das Item der angegebenen Gruppe zum gesammelten Lesen zu. Gruppe kann int oder str sein, mehrere Gruppen können als Liste angegeben werden.

 - Datentyp: **list(str)**


viess_read_group_trigger
========================


Wenn diesem Item ein beliebiger Wert zugewiesen wird, werden alle zum Lesen konfigurierten Items der angegebenen Gruppe neu vom Gerät gelesen, bei Gruppe 0 werden alle zum Lesen konfigurierten Items neu gelesen. Das Item kann nicht gleichzeitig mit viess_command belegt werden.

 - Datentyp: **str**


viess_read_initial
==================


Legt fest, dass der Wert beim Start vom Gerät gelesen wird

 - Datentyp: **bool**


viess_write
===========


Änderung des Items werden an das Gerät gesendet

 - Datentyp: **bool**


===============
Logik Parameter
===============


Das Plugin verfügt über folgende Parameter, die in der Datei ``../etc/logic.yaml`` konfiguriert werden:

Keine Logik Parameter in den Metadaten beschrieben - **Bitte in der README nachsehen** (siehe Fußnote)

================
Plugin Functions
================


Das Plugin verfügt über folgende öffentliche Funktionen, die z.B. in Logiken aufgerufen werden können.

**Keine**

.. [#f1] Diese Seite wurde aus den Metadaten des Plugins erzeugt.
