.. |_| unicode:: 0xA0


==============================
Plugin 'odlinfo' Konfiguration
==============================


.. index:: Plugins; odlinfo Konfiguration

.. image:: /plugins/odlinfo/webif/static/img/plugin_logo.png
   :alt: plugin logo
   :width: 300px
   :height: 300px
   :scale: 50 %
   :align: left

.. |br| raw:: html

   <br />

Im folgenden sind etwaige Anforderungen und unterstützte Hardware beschrieben. Danach folgt die               Beschreibung, wie das Plugin **odlinfo** konfiguriert wird. Außerdem ist im folgenden               beschrieben, wie das Plugin in den Item Definitionen genutzt werden kann. [#f1]_ 

Es handelt sich bei diesem Plugin um ein **web Plugin**.



Beschreibung
============

Dieses Plugin liefert die Gamma-Ortsdosisleistung (ODL) in µSv/h  von mehreren Stationen in Deutschland (zur Verfügung gestellt durch das Bundesamt für Strahlenschutz). Mehr Informationen unter https://odlinfo.bfs.de. Nutzungsbedingungen siehe https://www.imis.bfs.de/geoportal/resources/sitepolicy.html.


Anforderungen
=============




 - Minimum SmartHomeNG Version: **1.6**

Konfiguration
=============


Im folgenden ist beschrieben, wie das Plugin **odlinfo** konfiguriert wird. Außerdem ist im folgenden beschrieben, wie das Plugin in den Item Definitionen genutzt werden kann.


=========
Parameter
=========


Das Plugin verfügt über folgende Parameter, die in der Datei ``../etc/plugin.yaml`` konfiguriert werden:


cycle
=====


(optional) Zeit zwischen zwei Updateläufen. Default ist 3600 Sekunden.

 - Datentyp: **int**
 - Standardwert: **1800**


==============
Item Attribute
==============


Das Plugin unterstützt folgende Item Attribute, die in den Dateien im Verzeichnis  ``../items`` verwendet werden:


odl_data_type
=============


Daten, die dem Item zugeordnet werden sollen.

 - Datentyp: **str**

 - Mögliche Werte:

   - **value**
   - **value_terrestrial**
   - **value_cosmic**


odl_station
===========


Internationale ID oder ODL Messstellenkennung der Station.

 - Datentyp: **str**


===============
Logik Parameter
===============


Das Plugin verfügt über folgende Parameter, die in der Datei ``../etc/logic.yaml`` konfiguriert werden:

Keine Logik Parameter in den Metadaten beschrieben - **Bitte in der README nachsehen** (siehe Fußnote)

================
Plugin Functions
================


Das Plugin verfügt über folgende öffentliche Funktionen, die z.B. in Logiken aufgerufen werden können.


get_station_for_id(odlinfo_id)
==============================


Gibt ein DICT mit Infos zur einer Messstation zurück. Keys: 'id', 'kenn', 'plz', 'name', 'site_status', 'site_status_text', 'kid', 'height_above_sea', 'start_measure', 'end_measure', 'value', 'value_cosmic', 'value_terrestrial', 'unit', 'validated', 'nuclide', 'duration'.

 - Ergebnistyp der Funktion: **dict**


odlinfo_id
----------

Array der IDs ('id' oder 'kenn') der Messstationen. Siehe Web-Interface des Plugins oder https://odlinfo.bfs.de/ODL/DE/service/datenschnittstelle/datenschnittstelle_node.html.

 - Datentyp: **str**


get_stations()
==============


Gibt ein Array of DICTs mit allen verfügbaren Messstationen zurück. Keys eines DICTs:<br/><br/> <strong>id:</strong> Die internationale ID der Messstelle.<br/> <strong>kenn:</strong> Die Messstellenkennung, wie sie auch auf ODL-Info verwendet wird.<br/> <strong>plz:</strong> Die Postleitzahl der Messstelle.<br/> <strong>name:</strong> Der Name bzw. Ortsname der Messstelle.<br/> <strong>site_status:</strong> Der Status der Messstelle als Zahl. (1 = in Betrieb, 2 = Defekt, 3 = Testbetrieb)<br/> <strong>site_status_text:</strong> Der Status der Messstelle als Text.<br/> <strong>kid:</strong> ID des Messnetzknotens, dem die Messstelle zugeordnet ist. (1 = Freiburg, 2 = Berlin, 3 = München, 4 = Bonn, 5 = Salzgitter, 6 = Rendsburg)<br/> <strong>height_above_sea:</strong> Höhe der Messstelle über NN.<br/> <strong>start_measure:</strong> Startzeitpunkt der Messperiode für den gegebenen Messwert.<br/> <strong>end_measure:</strong> Endzeitpunkt der Messperiode für den gegebenen Messwert.<br/> <strong>value:</strong>

 - Ergebnistyp der Funktion: **list(dict)**


get_stations_for_ids(odlinfo_ids)
=================================


Gibt ein Array von DICTs mit Infos zu Messstationen zurück. Keys: 'id', 'kenn', 'plz', 'name', 'site_status', 'site_status_text', 'kid', 'height_above_sea', 'start_measure', 'end_measure', 'value', 'value_cosmic', 'value_terrestrial', 'unit', 'validated', 'nuclide', 'duration'.

 - Ergebnistyp der Funktion: **list(dict)**


odlinfo_ids
-----------

Array der IDs ('id' oder 'kenn') der Messstationen. Siehe Web-Interface des Plugins oder https://odlinfo.bfs.de/ODL/DE/service/datenschnittstelle/datenschnittstelle_node.html.

 - Datentyp: **list(str)**


get_update_timestamp()
======================


Gibt das datetime Objekt zurück, wann die intern im Plugin gecachten Daten zuletzt aktualisiert wurden.

 - Ergebnistyp der Funktion: **foo**


.. [#f1] Diese Seite wurde aus den Metadaten des Plugins erzeugt. Für den Fall, dass diese Seite nicht alle benötigten Informationen enthält, bitte auf die englischsprachige :doc:`README Datei <../../plugins/odlinfo/README>` des Plugins zugreifen.
